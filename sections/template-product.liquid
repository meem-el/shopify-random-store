<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css"
>
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

{% assign selected_variant = product.selected_or_first_available_variant %}

<div class="rs-pdp">
  <div class="rs-pdp__media">
    <div class="rs-pdp__media__desktop">
      <!-- Featured media -->
      <div class="rs-pdp__media__desktop-featured">
        {% assign featured_media = product.media.first %}
        {% render 'product-media', media: featured_media %}
      </div>

      <!-- Thumbnails row -->
      <div class="rs-pdp__media__desktop-thumbs">
        {% for media in product.media offset: 1 limit: 3 %}
          <div class="rs-pdp__media__desktop-thumb">
            {% render 'product-media', media: media %}
          </div>
        {% endfor %}
      </div>
    </div>

    <div class="rs-pdp__media__mobile">
      <div class="swiper">
        <div class="swiper-wrapper">
          {% for media in product.media %}
            <div class="swiper-slide">
              <div>
                {% render 'product-media', media: media %}
              </div>
            </div>
          {% endfor %}
        </div>
        <div class="swiper-pagination"></div>
        <div class="swiper-button-prev"></div>
        <div class="swiper-button-next"></div>
      </div>
    </div>
  </div>

  <div class="rs-pdp__product_info">
    {% form 'product', product, id: 'product-form', novalidate: 'novalidate' %}
      <input type="hidden" name="id" value="{{ selected_variant.id }}">

      {% for block in section.blocks %}
        {% case block.type %}
          {% when 'vendor' %}
            <div>
              <span>{{ product.vendor }}</span>
            </div>
          {% when 'title' %}
            <div>
              <h1>{{ product.title }}</h1>
            </div>
          {% when 'price' %}
            <div id="price-{{ section.id }}">
              <span class="rs__line__through">{{ selected_variant.compare_at_price | money }}</span>
              <span>{{ selected_variant.price | money }}</span>

              {% if selected_variant.price < selected_variant.compare_at_price %}
                <span>Sale!</span>
              {% endif %}
            </div>

          {% when 'variant_selector' %}
            <div>
              {% unless product.has_only_default_variant %}
                <variant-selector data-url="{{ product.url }}" data-section="{{ section.id }}">
                  {% for option in product.options_with_values %}
                    <label for="Option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</label>

                    <div>
                      <select
                        name="options[{{ option.name |  escape }}]"
                        id="Option-{{ section.id }}-{{ forloop.index0 }}"
                      >
                        {% for value in option.values %}
                          <option
                            value="{{ value |  escape }}"
                            {% if option.selected_value == value %}
                              selected="selected"
                            {% endif %}
                          >
                            {{ value }}
                          </option>
                        {% endfor %}
                      </select>
                    </div>

                    <script type="application/json">
                      {{ product.variants |  json }}
                    </script>
                  {% endfor %}
                </variant-selector>
              {% endunless %}
            </div>
          {% when 'quantity' %}
            <div>
              <label for="Quantity-{{ section.id }}">Quantity</label>
              <div>
                <input type="number" name="quantity" id="Quantity-{{ section.id }}" value="1" min="1">
              </div>
            </div>
          {% when 'description' %}
            <div>
              <p>{{ product.description }}</p>
            </div>
          {% when 'checkout_buttons' %}
            <div>
              <button
                {% if selected_variant.available == false %}
                  disabled
                {% endif %}
              >
                {% if selected_variant.available == false %}
                  Sold Out
                {% else %}
                  Add to cart
                {% endif %}
              </button>
            </div>
        {% endcase %}
      {% endfor %}
    {% endform %}
  </div>
</div>

<script>
  class VariantSelector extends HTMLElement {
    constructor() {
      super();
      this.addEventListener('change', this.onVariantChange);
    }

    onVariantChange() {
      this.getSelectedOptions();
      this.getSelectedVariant();

      if (this.currentVariant) {
        this.updateURL();
        this.updateFormID();
        this.updatePrice();
      }
    }

    getSelectedOptions() {
      this.options = Array.from(this.querySelectorAll('select'), (select) => select.value);
    }

    getVariantJSON() {
      this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
      return this.variantData;
    }

    getSelectedVariant() {
      this.currentVariant = this.getVariantJSON().find((variant) => {
        const findings = !variant.options
          .map((option, index) => {
            return this.options[index] === option;
          })
          .includes(false);

        if (findings) return variant;
      });
    }

    updateURL() {
      if (!this.currentVariant) return;
      window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`);
    }

    updateFormID() {
      const form_input = document.querySelector('#product-form').querySelector('input[name="id"]');
      form_input.value = this.currentVariant.id;
    }

    updatePrice() {
      fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`)
        .then((response) => response.text())
        .then((responseText) => {
          const id = `price-${this.dataset.section}`;
          const html = new DOMParser().parseFromString(responseText, 'text/html');

          const oldPrice = document.getElementById(id);
          const newPrice = html.getElementById(id);

          if (oldPrice && newPrice) oldPrice.innerHTML = newPrice.innerHTML;
        });
    }
  }

  customElements.define('variant-selector', VariantSelector);
</script>

<script>
  const swiper = new Swiper('.swiper', {
    direction: 'horizontal',
    pagination: {
      el: '.swiper-pagination',
      clickable: true,
    },
    navigation: {
      prevEl: '.swiper-button-prev',
      nextEl: '.swiper-button-next',
    },
  });
</script>

{% schema %}
{
  "name": "Product",
  "blocks": [
    {
      "type": "vendor",
      "name": "Vendor",
      "limit": 1
    },
    {
      "type": "title",
      "name": "Title",
      "limit": 1
    },
    {
      "type": "price",
      "name": "Price",
      "limit": 1
    },
    {
      "type": "variant_selector",
      "name": "Variant Selector",
      "limit": 1
    },
    {
      "type": "quantity",
      "name": "Quantity",
      "limit": 1
    },
    {
      "type": "description",
      "name": "Description",
      "limit": 1
    },
    {
      "type": "checkout_buttons",
      "name": "Checkout Buttons",
      "limit": 1
    }
  ]
}
{% endschema %}
